show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M17 (huge, weighted)", "M19 (huge, integer)",
"M21 (glasso, weighted)", "M22 (glasso, integer)",
"M23 (correlation, weighted)", "M24 (correlation, integer)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ratio measures of PTV networks. CSES cases",
string.pred = " ",
auto.label = T,
file = here("Output", "Supplement", "Tab_4.html")
)
M17 <- lm(EES_GGM_huge_np_w ~ PAP_electorate + LAP_electorate + country + year + ENEP + gallagher + ihdi, data = cses_cases)
M19 <- lm(EES_GGM_huge_np_i ~ PAP_electorate + LAP_electorate + country + year + ENEP + gallagher + ihdi, data = cses_cases)
M20 <- lm(EES_GGM_glasso_np_w ~ PAP_electorate + LAP_electorate + country + year + ENEP + gallagher + ihdi, data = cses_cases)
M21 <- lm(EES_GGM_glasso_np_i ~ PAP_electorate + LAP_electorate + country + year + ENEP + gallagher + ihdi, data = cses_cases)
M22 <- lm(EES_COR_np_w ~ PAP_electorate + LAP_electorate + country + year + ENEP + gallagher + ihdi, data = cses_cases)
M23 <- lm(EES_COR_np_i ~ PAP_electorate + LAP_electorate + country + year + ENEP + gallagher + ihdi, data = cses_cases)
tab_model(
list(M17, M19, M20, M21, M22, M23),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M17 (huge, weighted)", "M19 (huge, integer)",
"M20 (glasso, weighted)", "M21 (glasso, integer)",
"M22 (correlation, weighted)", "M23 (correlation, integer)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ratio measures of PTV networks. CSES cases",
string.pred = " ",
auto.label = T,
file = here("Output", "Supplement", "Tab_4.html")
)
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
turnout$mand = as.factor(turnout$mand)
#robustness: remove outliers from turnout (zero)
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_turn <- mean(turnout$turnout, na.rm = TRUE)
sd_turn <- sd(turnout$turnout, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(turnout > (mean_turn - num_sd * sd_turn) & turnout < (mean_turn + num_sd * sd_turn))
#robustness: remove outliers from np_i (7)
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_i > (mean_np - num_sd * sd_np) & EES_COR_np_i < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_i > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_i < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_i > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_i < (mean_np + num_sd * sd_np))
#robustness: remove outliers from np_w (10)
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_w > (mean_np - num_sd * sd_np) & EES_COR_np_w < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_w > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_w < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_w > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_w < (mean_np + num_sd * sd_np))
# Data preparation
violin_data_aspl = turnout %>%
select(turnout, turnout_nat)
# Reshape the data to long format
long_violin_data_aspl = melt(violin_data_aspl, variable.name = "Model", value.name = "Value")
# Calculate the sample sizes
sample_size <- long_violin_data_aspl %>% group_by(Model) %>% summarize(num = n())
# Join the sample and violin data
plot_data_aspl <- long_violin_data_aspl %>%
left_join(sample_size, by = "Model") %>%
mutate(myaxis = paste0(Model, "\n", "n=", num))
# Create the plot
violin_plot_turnout <- ggplot(plot_data_aspl, aes(x = myaxis, y = Value, fill = Model)) +
geom_violin(position = position_dodge(width = 0.25), width = 0.8) +
geom_boxplot(width = 0.1, color = "grey", alpha = 0.2, position = position_dodge(width = 0.25)) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(size = 14)
) +
labs(title = "Aggregated distribution of Turnout", x = "", y = "Turnout") +
scale_x_discrete(labels = c("EU Turnout", "National Turnout"))
print(violin_plot_turnout)
#save
ggsave(here("Output", "Supplement", "Fig_6.jpg"), violin_plot_turnout, width = 16, height = 9, dpi = 600)
# np_w as absoulte value
turnout$EES_COR_np_w = abs(turnout$EES_COR_np_w)
turnout$EES_GGM_glasso_np_w = abs(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_np_w = abs(turnout$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
turnout$EES_GGM_glasso_aspl = rescale01(turnout$EES_GGM_glasso_aspl)
turnout$EES_GGM_glasso_np_i = rescale01(turnout$EES_GGM_glasso_np_i)
turnout$EES_GGM_glasso_np_w = rescale01(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_aspl = rescale01(turnout$EES_GGM_huge_aspl)
turnout$EES_GGM_huge_np_i = rescale01(turnout$EES_GGM_huge_np_i)
turnout$EES_GGM_huge_np_w = rescale01(turnout$EES_GGM_huge_np_w)
turnout$EES_COR_aspl = rescale01(turnout$EES_COR_aspl)
turnout$EES_COR_np_i = rescale01(turnout$EES_COR_np_i)
turnout$EES_COR_np_w = rescale01(turnout$EES_COR_np_w)
turnout$educ = rescale01(turnout$educ)
turnout$ideol = rescale01(turnout$ideol)
turnout$mass_mob = rescale01(turnout$mass_mob)
turnout$p_inst_k = rescale01(turnout$p_inst_k)
turnout$p_inst = rescale01(turnout$p_inst)
turnout$pint = rescale01(turnout$pint)
turnout$pola = rescale01(turnout$pola)
turnout$ENEP = rescale01(turnout$ENEP)
turnout$gallagher = rescale01(turnout$gallagher)
turnout$ihdi = rescale01(turnout$ihdi)
turnout$turnout = rescale01(turnout$turnout)
turnout$turnout_nat = rescale01(turnout$turnout_nat)
M24 = lm(turnout ~ EES_GGM_huge_np_w + EES_GGM_huge_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M25 = lm(turnout ~ EES_GGM_glasso_np_w + EES_GGM_glasso_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M26 = lm(turnout ~ EES_COR_np_w + EES_COR_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M27 = lm(turnout_nat ~ EES_GGM_huge_np_w + EES_GGM_huge_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M28 = lm(turnout_nat ~ EES_GGM_glasso_np_w + EES_GGM_glasso_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M29 = lm(turnout_nat ~ EES_COR_np_w + EES_COR_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
tab_model(list(M24, M25, M26, M27, M28, M29),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M24 (EU turnout, huge)", "M25 (EU turnout, glasso)",
"M26 (EU turnout, correlation)", "M27 (National turnout, huge)",
"M28 (National turnout, glasso)", "M29 (National turnout, correlation)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_5.html"))
# reg turnout
M30 = lm(turnout ~ EES_GGM_huge_np_w + EES_GGM_huge_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M31 = lm(turnout ~ EES_GGM_glasso_np_w + EES_GGM_glasso_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M32 = lm(turnout ~ EES_COR_np_w + EES_COR_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M33 = lm(turnout_nat ~ EES_GGM_huge_np_w + EES_GGM_huge_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M34 = lm(turnout_nat ~ EES_GGM_glasso_np_w + EES_GGM_glasso_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M35 = lm(turnout_nat ~ EES_COR_np_w + EES_COR_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
tab_model(list(M30, M31, M32, M33, M34, M35),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M30 (EU turnout, huge)", "M31 (EU turnout, glasso)",
"M32 (EU turnout, correlation)", "M33 (National turnout, huge)",
"M34 (National turnout, glasso)", "M35 (National turnout, correlation)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_6.html"))
# reg turnout
M30 = lm(turnout ~ EES_GGM_huge_np_i + EES_GGM_huge_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M31 = lm(turnout ~ EES_GGM_glasso_np_i + EES_GGM_glasso_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M32 = lm(turnout ~ EES_COR_np_i + EES_COR_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M33 = lm(turnout_nat ~ EES_GGM_huge_np_i + EES_GGM_huge_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M34 = lm(turnout_nat ~ EES_GGM_glasso_np_i + EES_GGM_glasso_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
M35 = lm(turnout_nat ~ EES_COR_np_i + EES_COR_aspl + country + year + mand + gdp + infla + ihdi +
pola + ENEP, data = turnout)
tab_model(list(M30, M31, M32, M33, M34, M35),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M30 (EU turnout, huge)", "M31 (EU turnout, glasso)",
"M32 (EU turnout, correlation)", "M33 (National turnout, huge)",
"M34 (National turnout, glasso)", "M35 (National turnout, correlation)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_6.html"))
#Figure_2
# Get the predicted values and confidence intervals using ggeffects
predicted_values <- ggeffects::predict_response(M24, terms = "EES_GGM_huge_np_w",
margin = "marginalmeans") %>%
as.data.frame()
# Mutate the country_year column in the original data
data_scatt_2 <- turnout %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7, 8),
country_year_modified = paste(iso2c, year, sep = "_")
)
# Rename variables in predicted_values to avoid conflicts
predicted_values <- predicted_values %>%
rename(EES_GGM_huge_np_w = x, predicted_turnout = predicted)
# Plot with the true regression line and SE
scatt2 <- ggplot(data_scatt_2, aes(x = EES_GGM_huge_np_w, y = turnout)) +
geom_point(size = 1) +
geom_ribbon(data = predicted_values, aes(x = EES_GGM_huge_np_w, ymin = conf.low, ymax = conf.high), inherit.aes = FALSE, alpha = 0.2, fill = "#69b3a2") +
geom_line(data = predicted_values, aes(x = EES_GGM_huge_np_w, y = predicted_turnout), inherit.aes = FALSE, color = "pink", size = 1) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14) +
labs(x = "Ratio negative positive edges",
y = "EU turnout") +
geom_text_repel(data = subset(data_scatt_2, !country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified), size = 2) +
geom_label_repel(data = subset(data_scatt_2, country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified),
size = 3,
box.padding = 0.3,
point.padding = 0.5,
label.size = 0.25,
fill = 'white',
color = 'black')
print(scatt2)
#save
ggsave(here("Output", "Article", "tries_fig_2_3", "Figure_2.jpg"), scatt2, width = 180, height = 180, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), scatt2, width = 180, height = 180, units = "mm", dpi = 600)
#Figure_3
# Get the predicted values and confidence intervals using ggeffects
predicted_values_M16 <- ggpredict(M27, terms = "EES_GGM_huge_np_w",
margin = "marginalmeans") %>%
as.data.frame()
# Mutate the country_year column in the original data
data_scatt_3 <- turnout %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7, 8),
country_year_modified = paste(iso2c, year, sep = "_")
)
# Rename variables in predicted_values to avoid conflicts
predicted_values_M16 <- predicted_values_M16 %>%
rename(EES_GGM_huge_np_w = x, predicted_turnout_nat = predicted)
# Plot with the true regression line and SE
scatt3 <- ggplot(data_scatt_3, aes(x = EES_GGM_huge_np_w, y = turnout_nat)) +
geom_point(size = 1) +
geom_ribbon(data = predicted_values_M16, aes(x = EES_GGM_huge_np_w, ymin = conf.low, ymax = conf.high), inherit.aes = FALSE, alpha = 0.2, fill = "#69b3a2") +
geom_line(data = predicted_values_M16, aes(x = EES_GGM_huge_np_w, y = predicted_turnout_nat), inherit.aes = FALSE, color = "pink", size = 1) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14) +
labs(x = "Ratio negative positive edges",
y = "National turnout") +
geom_text_repel(data = subset(data_scatt_3, !country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified), size = 2) +
geom_label_repel(data = subset(data_scatt_3, country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified),
size = 3,
box.padding = 0.3,
point.padding = 0.5,
label.size = 0.25,
fill = 'white',
color = 'black')
print(scatt3)
#save
ggsave(here("Output", "Article", "Figure_3_national.jpg"), scatt3, width = 180, height = 180, units = "mm", dpi = 600)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 + scatt3
plot_layout(ncol = 1, heights = c(0, 0, 0), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
##save
#ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, #height = 90, units = "mm", dpi = 600)
# import network data to show examples
EES_data = read_rds(here("Input", "data", "EES.rds"))
#Network models
irl_94_fit = estimateNetwork(EES_data[["1994"]][["IRL"]], default = "huge", tuning = 0.15)
aut_19_fit = estimateNetwork(EES_data[["2019"]][["AUT"]], default = "huge", tuning = 0.15)
#Network matrices for highlighted cases
irl_94 = irl_94_fit$graph
aut_19 = aut_19_fit$graph
#irl_94
shortnames_irl_94 = c("GP", "DL", "Lab", "PD", "FG", "FF", "SF")
longnames_irl_94 = c("Green Party", "Democratic Left", "Labour Party", "Progressive Democrats", "Fine Gael",
"Fianna Fail", "Sinn Fein")
#irl_94
irl_94_graph<-qgraph(irl_94,
layout = "spring", theme = "Borkulo", GLratio = 2,
labels = shortnames_irl_94, nodeNames = longnames_irl_94,
label.scale=FALSE, label.cex = 1, borders = F,
legend.cex = 0.45, legend = TRUE, details = FALSE, vsize=7.0,
title = "Ireland 1994", color = "#69b3a2",
filetype="jpg", filename=here("Output", "Article", "Figure_3", "Figure_3_a"))
#aut_19
shortnames_aut_19 = c("ÖVP", "SPÖ", "NEOS", "DG", "FPÖ", "BZÖ")
longnames_aut_19 = c("Austrian People's Party", "Austrian Social Democratic Party", "The New Austria and Liberal Forum",
"The Greens")
aut_19_graph<-qgraph(aut_19, GLratio = 2,
layout = "spring", theme = "Borkulo",
labels = shortnames_aut_19, nodeNames = longnames_aut_19,
label.scale=FALSE, label.cex = 1, borders = F,
legend.cex = 0.45, legend = TRUE, details = FALSE, vsize=7.0,
title = "Austria 2019", color = "#69b3a2",
filetype="jpg", filename=here("Output", "Article", "Figure_3", "Figure_3_b"))
# Plot with colored dots
scatt_mand <- ggplot(data_scatt_2, aes(x = EES_GGM_huge_np_w, y = turnout, color = as.factor(mand))) +
geom_point(size = 1) +
geom_smooth(method = lm, color = "pink", fill = "#69b3a2", se = TRUE) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum() +
labs(x = "Ratio negative positive edges",
y = "EU turnout",
color = "Mandatory voting") +
geom_text_repel(aes(label = country_year_modified), size = 2)
print(scatt_mand)
#save
ggsave(here("Output", "Supplement", "Fig_7.jpg"), scatt_mand, width = 16, height = 9, dpi = 600)
library("pacman")
p_load(tidyverse, here, haven, countrycode, qgraph, bootnet, EGAnet, psych,
huge, corclass)
EES_CCA = read_rds(here("Input", "models", "EES_CCA.rds"))
EES_COR = read_rds(here("Input", "models", "EES_COR.rds"))
EES_EGA = read_rds(here("Input", "models", "EES_EGA.rds"))
EES_GGM_glasso = read_rds(here("Input", "models", "EES_GGM_glasso.rds"))
EES_GGM_huge = read_rds(here("Input", "models", "EES_GGM_huge.rds"))
View(EES_GGM_huge)
knitr::opts_chunk$set(echo = FALSE, error = FALSE, message = FALSE, warning = FALSE)
library("pacman")
p_load(tidyverse, here, haven, countrycode, vdemdata, psych, lavaan, ltm, magick,
janitor, conflicted, sjPlot, BMA, BMS, fastDummies, ggplot2, reshape2, ggeffects,
hrbrthemes, viridis, ggrepel, jtools, patchwork, kableExtra, bootnet, qgraph, webshot)
#conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
# import final data
data = read_rds(here("Input", "final_data", "final.rds"))
#as factor
data$country = as.factor(data$country)
data$year = as.factor(data$year)
data$country_year = as.factor(data$country_year)
View(data)
library("pacman")
p_load(tidyverse, here, haven, countrycode, qgraph, bootnet, EGAnet, psych,
huge, corclass)
EES_CCA = read_rds(here("Input", "models", "EES_CCA.rds"))
EES_COR = read_rds(here("Input", "models", "EES_COR.rds"))
EES_EGA = read_rds(here("Input", "models", "EES_EGA.rds"))
EES_GGM_glasso = read_rds(here("Input", "models", "EES_GGM_glasso.rds"))
EES_GGM_huge = read_rds(here("Input", "models", "EES_GGM_huge.rds"))
View(EES_GGM_glasso)
EES_GGM_glasso[["2014"]][["MLT"]]
EES_GGM_glasso[["2004"]][["ITA"]]
knitr::opts_chunk$set(echo = FALSE, error = FALSE, message = FALSE, warning = FALSE)
library("pacman")
p_load(tidyverse, here, haven, countrycode, vdemdata, psych, lavaan, ltm, magick,
janitor, conflicted, sjPlot, BMA, BMS, fastDummies, ggplot2, reshape2, ggeffects,
hrbrthemes, viridis, ggrepel, jtools, patchwork, kableExtra, bootnet, qgraph, webshot)
#conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
# import final data
data = read_rds(here("Input", "final_data", "final.rds"))
#as factor
data$country = as.factor(data$country)
data$year = as.factor(data$year)
data$country_year = as.factor(data$country_year)
View(data)
library("pacman")
p_load(tidyverse, here, haven, countrycode, qgraph, bootnet, EGAnet, psych,
huge, corclass)
EES = read_rds(here("Input", "data", "EES.rds"))
View(EES)
p_load(tidyverse, here, haven, countrycode, qgraph, bootnet, EGAnet, psych,
huge, corclass, purr)
library("pacman")
p_load(tidyverse, here, haven, countrycode, qgraph, bootnet, EGAnet, psych,
huge, corclass, purrr)
#calculate true N per wave
# the function
calculate_total_rows <- function(year_list) {
total_rows <- map_dbl(year_list, nrow)
sum(total_rows)
}
# Apply the function
total_rows_per_year <- map_dbl(EES, calculate_total_rows)
# Convert the result to a data frame
total_rows_df <- data.frame(
Year = names(total_rows_per_year),
TotalRows = total_rows_per_year
)
# Print
print(total_rows_df)
#packages
library("pacman")
p_load(tidyverse, here, sjlabelled, stringr, glue, janitor, haven, stargazer,
ltm, skimr, readxl, naniar, labelled, conflicted, countrycode, visdat)
#remove scientific notation
options(scipen=999)
#conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
#EES data
#Combined data from 1989 to 2004
d_1989_2004 = read_dta(here("Input", "data", "trendEES.dta")) %>%
clean_names()
#Original data 2009
d_2009 = read_dta(here("Input", "data", "2009.dta")) %>%
clean_names()
##ptvs
#table(d_2009$q39_p1) #first
#table(d_2009$q39_p15) #last
#Original data 2014
d_2014 = read_dta(here("Input", "data", "2014.dta")) %>%
clean_names()
##ptvs
#table(d_2014$qpp8_1) #first
#table(d_2014$qpp8_8) #last
#Original data 2019
d_2019 = read_dta(here("Input", "data", "2019.dta")) %>%
clean_names()
##ptvs
#table(d_2019$q10_1) #first
#table(d_2019$q10_10) #last
#Extra operations on cumulated data 1989-2004
#select country, year, ptvs
d_1989_2004 = d_1989_2004 %>%
select(t_ees, t_cntry, t_var001, t_var_ptv_party1: t_var_ptv_party58)
#Missing cases as NA
d_1989_2004 = d_1989_2004 %>%
mutate(across(t_var_ptv_party1:t_var_ptv_party58, ~case_when(
. == 99 ~ NA_real_,
. == 98 ~ NA_real_,
. == 97 ~ NA_real_,
. == 12 ~ NA_real_,
. == -1 ~ NA_real_,
TRUE ~ .
)))
#wave dfs for d_1989_2004
list_of_dfs = split(d_1989_2004, d_1989_2004$t_ees)
for (year in names(list_of_dfs)) {
var_name = paste("df", year, sep = "_")
assign(var_name, list_of_dfs[[year]], envir = .GlobalEnv)
}
View(df_1989)
d_1989_2004 = read_dta(here("Input", "data", "trendEES.dta")) %>%
clean_names()
View(d_1989_2004)
View(d_1989_2004)
library("pacman")
p_load(tidyverse, here, haven, countrycode, qgraph, bootnet, EGAnet, psych,
huge, corclass, purrr)
EES = read_rds(here("Input", "data", "EES.rds"))
#calculate true N per wave
# the function
calculate_total_rows <- function(year_list) {
total_rows <- map_dbl(year_list, nrow)
sum(total_rows)
}
# Apply the function
total_rows_per_year <- map_dbl(EES, calculate_total_rows)
# Convert the result to a data frame
total_rows_df <- data.frame(
Year = names(total_rows_per_year),
TotalRows = total_rows_per_year
)
# Print
print(total_rows_df)
View(total_rows_df)
View(EES)
EES[["1989"]][["BEL"]]
1043+1001+1034+1018+1002+1006+1007+1002+1055+500+1047+997+1045+306
