data$mass_mob = rescale01(data$mass_mob)
data$p_inst_k = rescale01(data$p_inst_k)
data$p_inst = rescale01(data$p_inst)
data$pint = rescale01(data$pint)
data$pola = rescale01(data$pola)
data$turnout = rescale01(data$turnout)
data$ENEP = rescale01(data$ENEP)
data$gallagher = rescale01(data$gallagher)
data$ihdi = rescale01(data$ihdi)
M1 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year , data = data)
M2 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(
list(M1, M2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1 (Baseline)", "M2 (Controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "pola", "pint"),
pred.labels = c("Party institutionalization", "Party polarization", "Political interest"),
file = here("Output", "Article", "Table_1.html")
)
#save as doc
tab_model(
list(M1, M2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1 (Baseline)", "M2 (Controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "pola", "pint"),
pred.labels = c("Party institutionalization", "Party polarization", "Political interest"),
file = here("Output", "Article", "Table_1.doc")
)
M1 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year , data = data)
M2 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M3 <- lm(EES_GGM_glasso_aspl ~ p_inst + pola + pint + country + year , data = data)
M4 <- lm(EES_GGM_glasso_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M5 <- lm(EES_COR_aspl ~ p_inst + pola + pint + country + year , data = data)
M6 <- lm(EES_COR_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(
list(M1, M2, M3, M4, M5, M6),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1 (huge ASPL)", "M2 (huge ASPL, controls)", "M3 (glsso ASPL)", "M4 (glasso ASPL, controls)", "M5 (correlation ASPL)", "M6 (correlation ASPL, controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = T,
file = here("Output", "Supplement", "Tab_1.html")
)
M7 <- lm(EES_GGM_huge_constraint ~ p_inst + pola + pint + country + year , data = data)
M8 <- lm(EES_GGM_huge_constraint ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M9 <- lm(EES_GGM_glasso_constraint ~ p_inst + pola + pint + country + year , data = data)
M10 <- lm(EES_GGM_glasso_constraint ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M11 <- lm(EES_COR_constraint ~ p_inst + pola + pint + country + year , data = data)
M12 <- lm(EES_COR_constraint ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(
list(M7, M8, M9, M10, M11, M12),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M7 (huge constraint)", "M8 (huge constraint, controls)", "M9 (glsso constraint)", "M10 (glasso constraint, controls)", "M11 (correlation constraint)", "M12 (correlation constraint, controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = T,
file = here("Output", "Supplement", "Tab_2.html")
)
# Fit the linear model
M2 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
# Get the predicted values and confidence intervals using ggeffects
predicted_values_M2 <- ggpredict(M2, terms = "p_inst") %>%
as.data.frame()
# Mutate the country_year column
data_scatt_2 <- data %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7, 8),
country_year_modified = paste(iso2c, year, sep = "_")
)
# Rename variables in predicted_values to avoid conflicts
predicted_values_M2 <- predicted_values_M2 %>%
rename(p_inst = x, predicted_EES_GGM_huge_aspl = predicted)
# Plot with the true regression line and SE
scatt1 <- ggplot(data_scatt_2, aes(x = p_inst, y = EES_GGM_huge_aspl)) +
geom_point(size = 1) +
geom_ribbon(data = predicted_values_M2, aes(x = p_inst, ymin = conf.low, ymax = conf.high), inherit.aes = FALSE, alpha = 0.2, fill = "#69b3a2") +
geom_line(data = predicted_values_M2, aes(x = p_inst, y = predicted_EES_GGM_huge_aspl), inherit.aes = FALSE, color = "pink", size = 1) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14) +
labs(x = "P_inst",
y = "EES GGM Huge ASPL") +
geom_text_repel(data = data_scatt_2,
aes(label = country_year_modified), size = 2)
print(scatt1)
#save
ggsave(here("Output", "Article", "Figure_1_a.jpg"), scatt1, width = 16, height = 9, dpi = 600)
## Data preparation
#data_scatt_1 <- data %>%
#  mutate(
#    iso2c = as.factor(countrycode(substr(country_year, 1, 3), "iso3c", #"iso2c")),
#    year = as.factor(substr(country_year, 7, 8)),
#    country_year_modified = as.factor(paste(iso2c, year, sep = "_")),
#    country = as.factor(country)
#  )
#
## Create the scatterplot with facet wrap by country
#scatt_faceted_1 = ggplot(data_scatt_1, aes(x = p_inst, y = EES_GGM_huge_aspl)) #+
#  geom_point(size = 1) +
#  labs(x = "Party institutionalization",
#       y = "ASPL") +
#  theme_ipsum(base_size = 14) +
#  facet_wrap(~ country) +
#  geom_text_repel(aes(label = year), size = 2.5)
#
## Print the faceted scatterplot
#print(scatt_faceted_1)
#
##save
#ggsave(here("Output", "Article", "Figure_1_b.jpg"), scatt_faceted_1, width = #16, height = 9, dpi = 600)
#data prep
data_scatt_2 <- data %>%
mutate(
iso2c = as.factor(countrycode(substr(country_year, 1, 3), "iso3c", "iso2c")),
country_year_modified = as.factor(paste(iso2c, year, sep = "_")),
country = as.factor(country)
)
# Create the scatterplot with facet wrap by country
scatt_faceted_2 = ggplot(data_scatt_2, aes(x = p_inst, y = EES_GGM_huge_aspl)) +
geom_point(size = 1) +
geom_smooth(method = "lm", color = "pink", fill = "#69b3a2", se = TRUE) +
labs(x = "Party institutionalization",
y = "ASPL") +
theme_ipsum(base_size = 14) +
facet_wrap(~ year) +
geom_text_repel(aes(label = country), size = 2.5)
# Print the faceted scatterplot
print(scatt_faceted_2)
#save
ggsave(here("Output", "Article", "Figure_1_c.jpg"), scatt_faceted_2, width = 16, height = 9, dpi = 600)
# Generate the effect plots
eff_1 = effect_plot(M2, pred = p_inst, interval = TRUE, plot.points = TRUE) +
labs(x = "Party institutionalization", y = "ASPL") +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14)
eff_2 = effect_plot(M2, pred = pola, interval = TRUE, plot.points = TRUE) +
labs(x = "Party polarization", y = "ASPL") +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14)
eff_3 = effect_plot(M2, pred = pint, interval = TRUE, plot.points = TRUE) +
labs(x = "Political interest", y = "ASPL") +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14)
# Combine the plots using patchwork
combined_plot <- eff_1 + eff_2 + eff_3
plot_layout(ncol = 1, heights = c(0.5, 0.5, 0.5), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot)
#save
ggsave(here("Output", "Article", "Figure_1_d.jpg"), combined_plot, width = 16, height = 9, dpi = 600)
# Select coeff
coef_select <- c("p_inst", "pola", "pint", "ENEP", "gallagher", "ihdi")
# Define new labels
coef_labels <- c(
"p_inst" = "Party institutionalization",
"pola" = "Party polarization",
"pint" = "Political interest",
"ENEP" = "ENEP",
"gallagher" = "Gallagher",
"ihdi" = "IHDI"
)
# Generate the summary plot with the specified coefficients, colors, and new labels
plot_coef <- plot_summs(M1, M2, coefs = coef_select, colors = c("pink", "#69b3a2"),
model.names = c("Baseline", "Full Model")) +
scale_y_discrete(labels = coef_labels) +
theme_ipsum(base_size = 14) +
labs(y = NULL)
# Print the plot
print(plot_coef)
#save
ggsave(here("Output", "Article", "Figure_1_e.jpg"), plot_coef, width = 16, height = 9, dpi = 600)
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
turnout$mand = as.factor(turnout$mand)
#robustness: remove outliers from turnout (zero)
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_turn <- mean(turnout$turnout, na.rm = TRUE)
sd_turn <- sd(turnout$turnout, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(turnout > (mean_turn - num_sd * sd_turn) & turnout < (mean_turn + num_sd * sd_turn))
#robustness: remove outliers from np_i (7)
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_i > (mean_np - num_sd * sd_np) & EES_COR_np_i < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_i > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_i < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_i > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_i < (mean_np + num_sd * sd_np))
#robustness: remove outliers from np_w (10)
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_w > (mean_np - num_sd * sd_np) & EES_COR_np_w < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_w > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_w < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_w > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_w < (mean_np + num_sd * sd_np))
# Data preparation
violin_data_aspl = turnout %>%
select(turnout, turnout_nat)
# Reshape the data to long format
long_violin_data_aspl = melt(violin_data_aspl, variable.name = "Model", value.name = "Value")
# Calculate the sample sizes
sample_size <- long_violin_data_aspl %>% group_by(Model) %>% summarize(num = n())
# Join the sample and violin data
plot_data_aspl <- long_violin_data_aspl %>%
left_join(sample_size, by = "Model") %>%
mutate(myaxis = paste0(Model, "\n", "n=", num))
# Create the plot
violin_plot_turnout <- ggplot(plot_data_aspl, aes(x = myaxis, y = Value, fill = Model)) +
geom_violin(position = position_dodge(width = 0.25), width = 0.8) +
geom_boxplot(width = 0.1, color = "grey", alpha = 0.2, position = position_dodge(width = 0.25)) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(size = 14)
) +
labs(title = "Aggregated distribution of Turnout", x = "", y = "Turnout") +
scale_x_discrete(labels = c("EU Turnout", "National Turnout"))
print(violin_plot_turnout)
#save
ggsave(here("Output", "Supplement", "Fig_6.jpg"), violin_plot_turnout, width = 16, height = 9, dpi = 600)
# np_w as absoulte value
turnout$EES_COR_np_w = abs(turnout$EES_COR_np_w)
turnout$EES_GGM_glasso_np_w = abs(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_np_w = abs(turnout$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
turnout$EES_GGM_glasso_aspl = rescale01(turnout$EES_GGM_glasso_aspl)
turnout$EES_GGM_glasso_np_i = rescale01(turnout$EES_GGM_glasso_np_i)
turnout$EES_GGM_glasso_np_w = rescale01(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_aspl = rescale01(turnout$EES_GGM_huge_aspl)
turnout$EES_GGM_huge_np_i = rescale01(turnout$EES_GGM_huge_np_i)
turnout$EES_GGM_huge_np_w = rescale01(turnout$EES_GGM_huge_np_w)
turnout$EES_COR_aspl = rescale01(turnout$EES_COR_aspl)
turnout$EES_COR_np_i = rescale01(turnout$EES_COR_np_i)
turnout$EES_COR_np_w = rescale01(turnout$EES_COR_np_w)
turnout$educ = rescale01(turnout$educ)
turnout$ideol = rescale01(turnout$ideol)
turnout$mass_mob = rescale01(turnout$mass_mob)
turnout$p_inst_k = rescale01(turnout$p_inst_k)
turnout$p_inst = rescale01(turnout$p_inst)
turnout$pint = rescale01(turnout$pint)
turnout$pola = rescale01(turnout$pola)
turnout$ENEP = rescale01(turnout$ENEP)
turnout$gallagher = rescale01(turnout$gallagher)
turnout$ihdi = rescale01(turnout$ihdi)
turnout$turnout = rescale01(turnout$turnout)
turnout$turnout_nat = rescale01(turnout$turnout_nat)
# reg turnout
M13 = lm(turnout ~ EES_GGM_huge_np_w + country + year, data = turnout)
M14 = lm(turnout ~ EES_GGM_huge_np_w + country + year+ mand + gdp + infla + ihdi +
pola + ENEP + EES_GGM_huge_aspl, data = turnout)
M15 = lm(turnout_nat ~ EES_GGM_huge_np_w + country + year, data = turnout)
M16 = lm(turnout_nat ~ EES_GGM_huge_np_w + country + year + mand + gdp + infla + ihdi +
pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tab_model(list(M13, M14, M15, M16),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M13 (EU turnout)", "M14 (EU turnout, controls)", "M15 (National turnout)", "M16 (National turnout, controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_3.html"))
# reg turnout
M17 = lm(turnout ~ EES_GGM_huge_np_i + country + year, data = turnout)
M18 = lm(turnout ~ EES_GGM_huge_np_i + country + year+ mand + gdp + infla + ihdi +
pola + ENEP + EES_GGM_huge_aspl, data = turnout)
M19 = lm(turnout_nat ~ EES_GGM_huge_np_i + country + year, data = turnout)
M20 = lm(turnout_nat ~ EES_GGM_huge_np_i + country + year + mand + gdp + infla + ihdi +
pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tab_model(list(M17, M18, M19, M20),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M17 (EU turnout)", "M18 (EU turnout, controls)", "M19 (National turnout)", "M20 (National turnout, controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_4.html"))
# reg turnout
M21 = lm(turnout ~ EES_COR_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_COR_aspl, data = turnout)
M22 = lm(turnout ~ EES_GGM_glasso_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_glasso_aspl, data = turnout)
M23 = lm(turnout_nat ~ EES_COR_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_COR_aspl, data = turnout)
M24 = lm(turnout_nat ~ EES_GGM_glasso_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_glasso_aspl, data = turnout)
tab_model(list(M21, M22, M23, M24),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M21 (EU turnout, correlation)", "M22 (EU turnout, glasso)", "M23 (National turnout, correlation)", "M24 (National turnout, glasso)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_5.html"))
# reg turnout
M25 = lm(turnout ~ EES_COR_np_i + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_COR_aspl, data = turnout)
M26 = lm(turnout ~ EES_GGM_glasso_np_i + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_glasso_aspl, data = turnout)
M27 = lm(turnout_nat ~ EES_COR_np_i + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_COR_aspl, data = turnout)
M28 = lm(turnout_nat ~ EES_GGM_glasso_np_i + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_glasso_aspl, data = turnout)
tab_model(list(M25, M26, M27, M28),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M25 (EU turnout, correlation)", "M26 (EU turnout, glasso)", "M27 (National turnout, correlation)", "M28 (National turnout, glasso)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on EU and National turnout",
string.pred = " ",
auto.label = TRUE,
file = here("Output", "Supplement", "Tab_6.html"))
M14 <- lm(turnout ~ EES_GGM_huge_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
# Get the predicted values and confidence intervals using ggeffects
predicted_values <- ggpredict(M14, terms = "EES_GGM_huge_np_w") %>%
as.data.frame()
# Mutate the country_year column in the original data
data_scatt_2 <- turnout %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7, 8),
country_year_modified = paste(iso2c, year, sep = "_")
)
# Rename variables in predicted_values to avoid conflicts
predicted_values <- predicted_values %>%
rename(EES_GGM_huge_np_w = x, predicted_turnout = predicted)
# Plot with the true regression line and SE
scatt2 <- ggplot(data_scatt_2, aes(x = EES_GGM_huge_np_w, y = turnout)) +
geom_point(size = 1) +
geom_ribbon(data = predicted_values, aes(x = EES_GGM_huge_np_w, ymin = conf.low, ymax = conf.high), inherit.aes = FALSE, alpha = 0.2, fill = "#69b3a2") +
geom_line(data = predicted_values, aes(x = EES_GGM_huge_np_w, y = predicted_turnout), inherit.aes = FALSE, color = "pink", size = 1) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14) +
labs(x = "Ratio negative positive edges",
y = "EU turnout") +
geom_text_repel(data = subset(data_scatt_2, !country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified), size = 2) +
geom_label_repel(data = subset(data_scatt_2, country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified),
size = 3,
box.padding = 0.3,
point.padding = 0.5,
label.size = 0.25,
fill = 'white',
color = 'black')
print(scatt2)
# Fit the linear model
M16 <- lm(turnout_nat ~ EES_GGM_huge_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
# Get the predicted values and confidence intervals using ggeffects
predicted_values_M16 <- ggpredict(M16, terms = "EES_GGM_huge_np_w") %>%
as.data.frame()
# Mutate the country_year column in the original data
data_scatt_3 <- turnout %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7, 8),
country_year_modified = paste(iso2c, year, sep = "_")
)
# Rename variables in predicted_values to avoid conflicts
predicted_values_M16 <- predicted_values_M16 %>%
rename(EES_GGM_huge_np_w = x, predicted_turnout_nat = predicted)
# Plot with the true regression line and SE
scatt3 <- ggplot(data_scatt_3, aes(x = EES_GGM_huge_np_w, y = turnout_nat)) +
geom_point(size = 1) +
geom_ribbon(data = predicted_values_M16, aes(x = EES_GGM_huge_np_w, ymin = conf.low, ymax = conf.high), inherit.aes = FALSE, alpha = 0.2, fill = "#69b3a2") +
geom_line(data = predicted_values_M16, aes(x = EES_GGM_huge_np_w, y = predicted_turnout_nat), inherit.aes = FALSE, color = "pink", size = 1) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14) +
labs(x = "Ratio negative positive edges",
y = "National turnout") +
geom_text_repel(data = subset(data_scatt_3, !country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified), size = 2) +
geom_label_repel(data = subset(data_scatt_3, country_year_modified %in% c("IE_94", "AT_19")),
aes(label = country_year_modified),
size = 3,
box.padding = 0.3,
point.padding = 0.5,
label.size = 0.25,
fill = 'white',
color = 'black')
print(scatt3)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 + scatt3
plot_layout(ncol = 1, heights = c(0.5, 0.5, 0.5), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 16, height = 16, dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 8, height = 8, dpi = 600)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 + scatt3
plot_layout(ncol = 1, heights = c(0.5, 0.5, 0.5), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 10, height = 8, dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 180, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 180, units = "mm", dpi = 300)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 90, units = "mm", dpi = 300)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 90, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 180, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 90, units = "mm", dpi = 600)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 180, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 360, height = 360, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 90, units = "mm", dpi = 600)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 + scatt3
plot_layout(ncol = 1, heights = c(0, 0, 0), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 90, units = "mm", dpi = 600)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 / scatt3
plot_layout(ncol = 1, heights = c(0, 0, 0), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 90, height = 180, units = "mm", dpi = 600)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 + scatt3
plot_layout(ncol = 1, heights = c(0, 0, 0), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 90, height = 180, units = "mm", dpi = 600)
ggsave(here("Output", "Article", "Figure_2.jpg"), combined_plot_2, width = 180, height = 90, units = "mm", dpi = 600)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), scatt2, width = 180, height = 90, units = "mm", dpi = 600)
#save
ggsave(here("Output", "Article", "Figure_2.jpg"), scatt2, width = 180, height = 180, units = "mm", dpi = 600)
#save
ggsave(here("Output", "Article", "Figure_3.jpg"), scatt3, width = 180, height = 180, units = "mm", dpi = 600)
