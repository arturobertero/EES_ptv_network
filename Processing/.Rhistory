EES_GGM_huge_constraint == max(EES_GGM_huge_constraint) |
EES_GGM_huge_constraint == min(EES_GGM_huge_constraint) |
EES_GGM_huge_aspl == max(EES_GGM_huge_aspl) |
EES_GGM_huge_aspl == min(EES_GGM_huge_aspl))
#Plot with labels
Fig_4 = ggplot(data_scatt, aes(x = EES_GGM_huge_constraint, y = EES_GGM_huge_aspl)) +
geom_point(size = 1) +
geom_smooth(method = lm, color = "pink", fill = "#69b3a2", se = TRUE) +
theme_ipsum() +
labs(
x = "Constraint",
y = "ASPL"
) +
geom_label_repel(
data = extreme_points,
aes(label = country_year_modified),
size = 3,
box.padding = 0.3,
point.padding = 0.5,
label.size = 0.25,
fill = 'white',
color = 'black'
) +
theme_ipsum() +
theme(
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
print(Fig_4)
#save
ggsave(here("Output", "Supplement", "Fig_4.jpg"), Fig_4, width = 16, height = 9, dpi = 600)
# import network data to show examples
EES_data = read_rds(here("Input", "data", "EES.rds"))
#Network models
prt_94_fit = estimateNetwork(EES_data[["1994"]][["PRT"]], default = "huge", tuning = 0.15)
lux_99_fit = estimateNetwork(EES_data[["1999"]][["LUX"]], default = "huge", tuning = 0.15)
mlt_14_fit = estimateNetwork(EES_data[["2014"]][["MLT"]], default = "huge", tuning = 0.15)
rou_19_fit = estimateNetwork(EES_data[["2019"]][["ROU"]], default = "huge", tuning = 0.15)
#Network matrices for highlighted cases
prt_94 = prt_94_fit$graph
lux_99 = lux_99_fit$graph
mlt_14 = mlt_14_fit$graph
rou_19 = rou_19_fit$graph
#prt_94
shortnames_prt_94 = c("CDU", "PS", "PSD", "CDS-PP", "PSN")
longnames_prt_94 = c("Democratic Unity Coalition", "Socialist Party", "Social Democratic Party", "People's Party", "National Solidarity Party")
prt_94_graph<-qgraph(prt_94,
layout = "spring", theme = "Borkulo", GLratio = 2,
labels = shortnames_prt_94, nodeNames = longnames_prt_94,
label.scale=FALSE, label.cex = 1, borders = F,
legend.cex = 0.45, legend = TRUE, details = FALSE, vsize=7.0,
title = "Portugal 1994", color = "#c9d175",
filetype="jpg", filename=here("Output", "Supplement", "Fig_5", "1"))
#lux_99
shortnames_lux_99 = c("DG", "GAL", "DL", "LSAP", "DP", "CSV", "ADR")
longnames_lux_99 = c("The Greens","Green and Liberal Alliance", "The Left", "Luxembourg Socialist Workers' Party", "Democratic Party",
"Christian Social People's Party", "Alternative Democratic Reform Party")
lux_99_graph<-qgraph(lux_99, GLratio = 2,
layout = "spring", theme = "Borkulo",
labels = shortnames_lux_99, nodeNames = longnames_lux_99,
label.scale=FALSE, label.cex = 1, borders = F,
legend.cex = 0.45, legend = TRUE, details = FALSE, vsize=7.0,
title = "Luxembourg 1999", color = "#c9d175",
filetype="jpg", filename=here("Output", "Supplement", "Fig_5", "2"))
#mlt_14
shortnames_mlt_14 = c("LP", "NP", "DA")
longnames_mlt_14 = c("Labour Party", "Nationalist Party", "Democratic Alternative")
mlt_14_graph<-qgraph(mlt_14,
layout = "spring", theme = "Borkulo", GLratio = 2,
labels = shortnames_mlt_14, nodeNames = longnames_mlt_14,
label.scale=FALSE, label.cex = 1, borders = F,
legend.cex = 0.45, legend = TRUE, details = FALSE, vsize=7.0,
title = "Malta 2014", color = "#c9d175",
filetype="jpg", filename=here("Output", "Supplement", "Fig_5", "3"))
#rou_19
shortnames_rou_19 = c("PSD", "USR", "ALDE", "PPR", "PNL", "UDMR", "PMP", "PLUS+", "A" )
longnames_rou_19 = c("Social Democratic Party", "Save Romania Union", "Alliance of Liberals and Democrats", "PRO Romania", "National Liberal Party", "Hungarian Democratic Alliance of Romania", "People's Movement Party", "Freedom, Unity and Solidarity Party", "Alliance 2020")
rou_19_graph<-qgraph(rou_19,
layout = "spring", theme = "Borkulo", GLratio = 2,
labels = shortnames_rou_19, nodeNames = longnames_rou_19,
label.scale=FALSE, label.cex = 1, borders = F,
legend.cex = 0.45, legend = TRUE, details = FALSE, vsize=7.0,
title = "Romania 2019", color = "#c9d175",
filetype="jpg", filename=here("Output", "Supplement", "Fig_5", "4"))
# np_w as absoulte value
data$EES_COR_np_w = abs(data$EES_COR_np_w)
data$EES_GGM_glasso_np_w = abs(data$EES_GGM_glasso_np_w)
data$EES_GGM_huge_np_w = abs(data$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
data$EES_GGM_glasso_aspl = rescale01(data$EES_GGM_glasso_aspl)
data$EES_GGM_glasso_np_i = rescale01(data$EES_GGM_glasso_np_i)
data$EES_GGM_glasso_np_w = rescale01(data$EES_GGM_glasso_np_w)
data$EES_GGM_huge_aspl = rescale01(data$EES_GGM_huge_aspl)
data$EES_GGM_huge_np_i = rescale01(data$EES_GGM_huge_np_i)
data$EES_GGM_huge_np_w = rescale01(data$EES_GGM_huge_np_w)
data$EES_COR_aspl = rescale01(data$EES_COR_aspl)
data$EES_COR_np_i = rescale01(data$EES_COR_np_i)
data$EES_COR_np_w = rescale01(data$EES_COR_np_w)
data$educ = rescale01(data$educ)
data$ideol = rescale01(data$ideol)
data$mass_mob = rescale01(data$mass_mob)
data$p_inst_k = rescale01(data$p_inst_k)
data$p_inst = rescale01(data$p_inst)
data$pint = rescale01(data$pint)
data$pola = rescale01(data$pola)
data$turnout = rescale01(data$turnout)
data$ENEP = rescale01(data$ENEP)
data$gallagher = rescale01(data$gallagher)
data$ihdi = rescale01(data$ihdi)
M1 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year , data = data)
M2 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(
list(M1, M2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "pola", "pint"),
pred.labels = c("Party institutionalization", "Party polarization", "Political interest"),
file = here("Output", "Article", "Table_1.html")
)
M1 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year , data = data)
M2 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M3 <- lm(EES_GGM_glasso_aspl ~ p_inst + pola + pint + country + year , data = data)
M4 <- lm(EES_GGM_glasso_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M5 <- lm(EES_COR_aspl ~ p_inst + pola + pint + country + year , data = data)
M6 <- lm(EES_COR_aspl ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(
list(M1, M2, M3, M4, M5, M6),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1 (huge ASPL)", "M2 (huge ASPL, controls)", "M3 (glsso ASPL)", "M4 (glasso ASPL, controls)", "M5 (correlation ASPL)", "M6 (correlation ASPL, controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = T,
file = here("Output", "Supplement", "Tab_1.html")
)
M7 <- lm(EES_GGM_huge_constraint ~ p_inst + pola + pint + country + year , data = data)
M8 <- lm(EES_GGM_huge_constraint ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M9 <- lm(EES_GGM_glasso_constraint ~ p_inst + pola + pint + country + year , data = data)
M10 <- lm(EES_GGM_glasso_constraint ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
M11 <- lm(EES_COR_constraint ~ p_inst + pola + pint + country + year , data = data)
M12 <- lm(EES_COR_constraint ~ p_inst + pola + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(
list(M7, M8, M9, M10, M11, M12),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M7 (huge constraint)", "M8 (huge constraint, controls)", "M9 (glsso constraint)", "M10 (glasso constraint, controls)", "M11 (correlation constraint)", "M12 (correlation constraint, controls)"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of PTV networks",
string.pred = " ",
auto.label = T,
file = here("Output", "Supplement", "Tab_2.html")
)
# Mutate the country_year column
data_scatt <- data %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7, 8),
country_year_modified = paste(iso2c, year, sep = "_")
)
#plot
scatt1 = ggplot(data_scatt, aes(x = p_inst, y = EES_GGM_huge_aspl)) +
geom_point(size = 1) +
geom_smooth(method = lm, color = "pink", fill = "#69b3a2", se = TRUE) +
theme_ipsum(base_size = 14) +
labs(x = "Party institutionalization",
y = "ASPL") +
geom_text_repel(aes(label = country_year_modified), size = 2.5)
print(scatt1)
#save
ggsave(here("Output", "Article", "Figure_1_a.jpg"), scatt1, width = 16, height = 9, dpi = 600)
# Data preparation
data_scatt_1 <- data %>%
mutate(
iso2c = as.factor(countrycode(substr(country_year, 1, 3), "iso3c", "iso2c")),
year = as.factor(substr(country_year, 7, 8)),
country_year_modified = as.factor(paste(iso2c, year, sep = "_")),
country = as.factor(country)
)
# Create the scatterplot with facet wrap by country
scatt_faceted_1 = ggplot(data_scatt_1, aes(x = p_inst, y = EES_GGM_huge_aspl)) +
geom_point(size = 1) +
labs(x = "Party institutionalization",
y = "ASPL") +
theme_ipsum(base_size = 14) +
facet_wrap(~ country) +
geom_text_repel(aes(label = year), size = 2.5)
# Print the faceted scatterplot
print(scatt_faceted_1)
#save
ggsave(here("Output", "Article", "Figure_1_b.jpg"), scatt_faceted_1, width = 16, height = 9, dpi = 600)
#data prep
data_scatt_2 <- data %>%
mutate(
iso2c = as.factor(countrycode(substr(country_year, 1, 3), "iso3c", "iso2c")),
country_year_modified = as.factor(paste(iso2c, year, sep = "_")),
country = as.factor(country)
)
# Create the scatterplot with facet wrap by country
scatt_faceted_2 = ggplot(data_scatt_2, aes(x = p_inst, y = EES_GGM_huge_aspl)) +
geom_point(size = 1) +
geom_smooth(method = "lm", color = "pink", fill = "#69b3a2", se = TRUE) +
labs(x = "Party institutionalization",
y = "ASPL") +
theme_ipsum(base_size = 14) +
facet_wrap(~ year) +
geom_text_repel(aes(label = country), size = 2.5)
# Print the faceted scatterplot
print(scatt_faceted_2)
#save
ggsave(here("Output", "Article", "Figure_1_c.jpg"), scatt_faceted_2, width = 16, height = 9, dpi = 600)
# Generate the effect plots
eff_1 = effect_plot(M2, pred = p_inst, interval = TRUE, plot.points = TRUE) +
labs(x = "Party institutionalization", y = "ASPL") +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14)
eff_2 = effect_plot(M2, pred = pola, interval = TRUE, plot.points = TRUE) +
labs(x = "Party polarization", y = "ASPL") +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14)
eff_3 = effect_plot(M2, pred = pint, interval = TRUE, plot.points = TRUE) +
labs(x = "Political interest", y = "ASPL") +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum(base_size = 14)
# Combine the plots using patchwork
combined_plot <- eff_1 + eff_2 + eff_3
plot_layout(ncol = 1, heights = c(0.5, 0.5, 0.5), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot)
#save
ggsave(here("Output", "Article", "Figure_1_d.jpg"), combined_plot, width = 16, height = 9, dpi = 600)
# Select coeff
coef_select <- c("p_inst", "pola", "pint", "ENEP", "gallagher", "ihdi")
# Define new labels
coef_labels <- c(
"p_inst" = "Party institutionalization",
"pola" = "Party polarization",
"pint" = "Political interest",
"ENEP" = "ENEP",
"gallagher" = "Gallagher",
"ihdi" = "IHDI"
)
# Generate the summary plot with the specified coefficients, colors, and new labels
plot_coef <- plot_summs(M1, M2, coefs = coef_select, colors = c("pink", "#69b3a2"),
model.names = c("Baseline", "Full Model")) +
scale_y_discrete(labels = coef_labels) +
theme_ipsum(base_size = 14) +
labs(y = NULL)
# Print the plot
print(plot_coef)
#save
ggsave(here("Output", "Article", "Figure_1_e.jpg"), plot_coef, width = 16, height = 9, dpi = 600)
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
turnout$mand = as.factor(turnout$mand)
# np_w as absoulte value
turnout$EES_COR_np_w = abs(turnout$EES_COR_np_w)
turnout$EES_GGM_glasso_np_w = abs(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_np_w = abs(turnout$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
turnout$EES_GGM_glasso_aspl = rescale01(turnout$EES_GGM_glasso_aspl)
turnout$EES_GGM_glasso_np_i = rescale01(turnout$EES_GGM_glasso_np_i)
turnout$EES_GGM_glasso_np_w = rescale01(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_aspl = rescale01(turnout$EES_GGM_huge_aspl)
turnout$EES_GGM_huge_np_i = rescale01(turnout$EES_GGM_huge_np_i)
turnout$EES_GGM_huge_np_w = rescale01(turnout$EES_GGM_huge_np_w)
turnout$EES_COR_aspl = rescale01(turnout$EES_COR_aspl)
turnout$EES_COR_np_i = rescale01(turnout$EES_COR_np_i)
turnout$EES_COR_np_w = rescale01(turnout$EES_COR_np_w)
turnout$educ = rescale01(turnout$educ)
turnout$ideol = rescale01(turnout$ideol)
turnout$mass_mob = rescale01(turnout$mass_mob)
turnout$p_inst_k = rescale01(turnout$p_inst_k)
turnout$p_inst = rescale01(turnout$p_inst)
turnout$pint = rescale01(turnout$pint)
turnout$pola = rescale01(turnout$pola)
turnout$ENEP = rescale01(turnout$ENEP)
turnout$gallagher = rescale01(turnout$gallagher)
turnout$ihdi = rescale01(turnout$ihdi)
#robustness: remove outliers from turnout
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_turn <- mean(turnout$turnout, na.rm = TRUE)
sd_turn <- sd(turnout$turnout, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(turnout > (mean_turn - num_sd * sd_turn) & turnout < (mean_turn + num_sd * sd_turn))
#robustness: remove outliers from np_i
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_i > (mean_np - num_sd * sd_np) & EES_COR_np_i < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_i > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_i < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_i > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_i < (mean_np + num_sd * sd_np))
#robustness: remove outliers from np_w
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_w > (mean_np - num_sd * sd_np) & EES_COR_np_w < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_w > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_w < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_w > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_w < (mean_np + num_sd * sd_np))
# Data preparation
violin_data_aspl = turnout %>%
select(turnout, turnout_nat)
# Reshape the data to long format
long_violin_data_aspl = melt(violin_data_aspl, variable.name = "Model", value.name = "Value")
# Calculate the sample sizes
sample_size <- long_violin_data_aspl %>% group_by(Model) %>% summarize(num = n())
# Join the sample and violin data
plot_data_aspl <- long_violin_data_aspl %>%
left_join(sample_size, by = "Model") %>%
mutate(myaxis = paste0(Model, "\n", "n=", num))
# Create the plot
violin_plot_aspl <- ggplot(plot_data_aspl, aes(x = myaxis, y = Value, fill = Model)) +
geom_violin(position = position_dodge(width = 0.25), width = 0.8) +
geom_boxplot(width = 0.1, color = "grey", alpha = 0.2, position = position_dodge(width = 0.25)) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(size = 14)
) +
labs(title = "Aggregated distribution of Turnout", x = "", y = "Turnout") +
scale_x_discrete(labels = c("turnout" = "Turnout", "turnout_nat" = "Turnout National"))
# Print the plot
print(violin_plot_aspl)
# reg turnout
tur_eu_i = lm(turnout ~ EES_GGM_huge_np_i + country + year, data = turnout)
tur_eu_w = lm(turnout ~ EES_GGM_huge_np_w + country + year, data = turnout)
tur_na_i = lm(turnout_nat ~ EES_GGM_huge_np_i + country + year, data = turnout)
tur_na_w = lm(turnout_nat ~ EES_GGM_huge_np_w + country + year, data = turnout)
tab_model(list(tur_eu_i, tur_eu_w, tur_na_i, tur_na_w),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3", "M4"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) ratio measures and turnout(s)",
string.pred = " ",
auto.label = FALSE,
terms = c("EES_GGM_huge_np_i", "EES_GGM_huge_np_w"))
# reg turnout
tur_eu_i_c = lm(turnout ~ EES_GGM_huge_np_i + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tur_eu_w_c = lm(turnout ~ EES_GGM_huge_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tur_na_i_c = lm(turnout_nat ~ EES_GGM_huge_np_i + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tur_na_w_c = lm(turnout_nat ~ EES_GGM_huge_np_w + country + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tab_model(list(tur_eu_i_c, tur_eu_w_c, tur_na_i_c, tur_na_w_c),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3", "M4"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) ratio measures and turnout(s)",
string.pred = " ",
auto.label = FALSE,
terms = c("EES_GGM_huge_np_i", "EES_GGM_huge_np_w", "mand1", "gdp", "infla", "ihdi", "pola", "EES_GGM_huge_aspl"))
# Mutate the country_year column
data_scatt_2 <- turnout %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 7,8),
country_year_modified = paste(iso2c, year, sep = "_")
)
#plot
scatt2 = ggplot(data_scatt_2, aes(x = EES_GGM_huge_np_w, y = turnout)) +
geom_point(size = 1) +
geom_smooth(method = lm, color = "pink", fill = "#69b3a2", se = TRUE) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum() +
labs(x = "Ratio negative positive edges",
y = "EU turnout") +
geom_text_repel(aes(label = country_year_modified), size = 2)
print(scatt2)
# Mutate the country_year column
data_scatt_3 <- turnout %>%
mutate(
iso2c = countrycode(substr(country_year, 1, 3), "iso3c", "iso2c"),
year = substr(country_year, 6, 7),
country_year_modified = paste(iso2c, year, sep = "_")
)
#plot
scatt3 = ggplot(data_scatt_3, aes(x = EES_GGM_huge_np_w, y = turnout_nat)) +
geom_point(size = 1) +
geom_smooth(method = lm, color = "pink", fill = "#69b3a2", se = TRUE) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum() +
labs(x = "Ratio negative positive edges",
y = "National turnout") +
geom_text_repel(aes(label = country_year_modified), size = 2)
print(scatt3)
# Combine the plots using patchwork
combined_plot_2 <- scatt2 + scatt3
plot_layout(ncol = 1, heights = c(0.5, 0.5, 0.5), guides = "collect") &
theme(plot.margin = margin(0,0,0,0, "cm"))
# Print the combined plot
print(combined_plot_2)
country_num = as.numeric(turnout$country)
mand_num = as.numeric(turnout$mand)
biserial.cor(country_num, mand_num)
stats::chisq.test(country_num, mand_num)
tab_1 = turnout %>%
select(country_year, country, mand)
# Print the table
kable(tab_1, caption = "Table 1: Country and Mandatory voting") %>%
kable_styling(bootstrap_options = "striped",
full_width = T)
# Plot with colored dots
scatt_mand <- ggplot(data_scatt_2, aes(x = EES_GGM_huge_np_w, y = turnout, color = as.factor(mand))) +
geom_point(size = 1) +
geom_smooth(method = lm, color = "pink", fill = "#69b3a2", se = TRUE) +
theme(plot.margin = margin(0, 0, 0, 0, "pt")) +
theme_ipsum() +
labs(x = "Ratio negative positive edges",
y = "EU turnout",
color = "Mandatory voting") +
geom_text_repel(aes(label = country_year_modified), size = 2)
print(scatt_mand)
#new v st_mand
turnout = turnout %>%
mutate(st_mand = ifelse(country %in% c("BEL", "LUX", "GRC"), 1, 0),
st_mand = as.factor(st_mand))
# reg turnout
tur_eu_w_c2 = lm(turnout ~ EES_GGM_huge_np_w + year + st_mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tur_na_w_c2 = lm(turnout_nat ~ EES_GGM_huge_np_w + year + st_mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tab_model(list(tur_eu_w_c2, tur_na_w_c2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) ratio measures and turnout(s)",
string.pred = " ",
auto.label = FALSE,
terms = c("EES_GGM_huge_np_w", "st_mand1", "gdp", "infla", "ihdi", "pola", "EES_GGM_huge_aspl"))
#new v st_mand
turnout = turnout %>%
mutate(st_mand = ifelse(country %in% c("BEL", "LUX", "GRC"), 1, 0),
st_mand = as.factor(st_mand))
# reg turnout
tur_eu_w_c3 = lm(turnout ~ EES_GGM_huge_np_w + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tur_na_w_c3 = lm(turnout_nat ~ EES_GGM_huge_np_w + year + mand + gdp + infla + ihdi + pola + ENEP + EES_GGM_huge_aspl, data = turnout)
tab_model(list(tur_eu_w_c3, tur_na_w_c3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) ratio measures and turnout(s)",
string.pred = " ",
auto.label = FALSE,
terms = c("EES_GGM_huge_np_w", "mand1", "gdp", "infla", "ihdi", "pola", "EES_GGM_huge_aspl"))
