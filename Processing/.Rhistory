# huge_aspl
bms_huge_aspl = bms %>%
select(EES_GGM_huge_aspl, alt_inf:p_inst, pint, pola, ihdi:gallagher, country_BEL:year_2019)
# data preparation
violin_data = data %>%
select("EES_COR_constraint", "EES_GGM_huge_constraint", "EES_GGM_glasso_constraint")
long_violin_data = melt(violin_data, variable.name = "Model", value.name = "Value")
# violin plot
# Calculate the sample sizes
sample_size <- long_violin_data %>% group_by(Model) %>% summarize(num=n())
# Join the sample and violin data
plot_data <- long_violin_data %>%
left_join(sample_size, by = "Model") %>%
mutate(myaxis = paste0(Model, "\n", "n=", num))
# Create the plot
violin_plot <- ggplot(plot_data, aes(x=myaxis, y=Value, fill=Model)) +
geom_violin(position=position_dodge(width=0.25), width=0.8) +
geom_boxplot(width=0.1, color="grey", alpha=0.2, position=position_dodge(width=0.25)) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(size=14)
) +
labs(title="Aggregated distribution of Constraint", x="", y="Constraint") +
scale_x_discrete(labels=c("Correlation", "Glasso", "Huge"))
# Print
print(violin_plot)
# data preparation
violin_data_aspl = data %>%
select("EES_COR_aspl", "EES_GGM_huge_aspl", "EES_GGM_glasso_aspl")
long_violin_data_aspl = melt(violin_data_aspl, variable.name = "Model", value.name = "Value")
# violin plot
# Calculate the sample sizes
sample_size <- long_violin_data_aspl %>% group_by(Model) %>% summarize(num=n())
# Join the sample and violin data
plot_data_aspl <- long_violin_data_aspl %>%
left_join(sample_size, by = "Model") %>%
mutate(myaxis = paste0(Model, "\n", "n=", num))
# Create the plot
violin_plot_aspl <- ggplot(plot_data_aspl, aes(x=myaxis, y=Value, fill=Model)) +
geom_violin(position=position_dodge(width=0.25), width=0.8) +
geom_boxplot(width=0.1, color="grey", alpha=0.2, position=position_dodge(width=0.25)) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(size=14)
) +
labs(title="Aggregated distribution of ASPL", x="", y="ASPL") +
scale_x_discrete(labels=c("Correlation", "Glasso", "Huge"))
# Print
print(violin_plot_aspl)
# data
cons_trend <- data %>%
select(year, country, EES_COR_constraint, EES_GGM_huge_constraint, EES_GGM_glasso_constraint)
long_cons_trend = melt(cons_trend, variable.name = "Model", value.name = "Value")
#graph
cons_trend_graph = long_cons_trend %>%
ggplot(aes(x = year, y = Value, group = interaction(country, Model), color = Model)) +
geom_line() +
geom_point() +
facet_wrap(~country) +
scale_color_viridis_d(labels = c("Correlation", "Glasso", "Huge")) +  # Custom legend labels
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Temporal Development of Constraint",
x = "Year",
y = "Constraint",
color = "Model Type")
# Print the graph
print(cons_trend_graph)
# data
aspl_trend <- data %>%
select(year, country, EES_COR_aspl, EES_GGM_huge_aspl, EES_GGM_glasso_aspl)
long_aspl_trend = melt(aspl_trend, variable.name = "Model", value.name = "Value")
#graph
aspl_trend_graph = long_aspl_trend %>%
ggplot(aes(x = year, y = Value, group = interaction(country, Model), color = Model)) +
geom_line() +
geom_point() +
facet_wrap(~country) +
scale_color_viridis_d(labels = c("Correlation", "Glasso", "Huge")) +  # Custom legend labels
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Temporal Development of ASPL",
x = "Year",
y = "Constraint",
color = "Model Type")
# Print the graph
print(aspl_trend_graph)
#model_cor_con <- bms(bms_cor_cons, fixed.reg = c(
#"country_BEL","country_BGR", "country_CYP",  "country_CZE","country_DEU",
#"country_DNK","country_ESP", "country_EST",  "country_FIN","country_FRA","country_GBR",
#"country_GRC", "country_HRV", "country_HUN","country_IRL","country_ITA",
#"country_LTU", "country_LUX", "country_LVA","country_MLT","country_NLD",
#"country_POL", "country_PRT", "country_ROU","country_SVK","country_SVN",
#"country_SWE", "year_1994"  ,"year_1999"  ,"year_2004",
#"year_2009", "year_2014","year_2019"))
#estimates.bma(model_cor_con) # pip > 50 for pint pola alt inf
cor_constraint <-   lm(EES_COR_constraint ~ pint + country + year , data = data)
cor_constraint_2 <- lm(EES_COR_constraint ~ pint + pola + country + year , data = data)
cor_constraint_3 <- lm(EES_COR_constraint ~ pint + pola + alt_inf + country + year , data = data)
tab_model(list(cor_constraint, cor_constraint_2, cor_constraint_3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on constraint of cor network",
string.pred = " ",
auto.label = FALSE,
terms = c("pint", "pola", "alt_inf"))
#model_glasso_con <- bms(bms_glasso_cons, fixed.reg = c(
#"country_BEL","country_BGR", "country_CYP",  "country_CZE","country_DEU",
#"country_DNK","country_ESP", "country_EST",  "country_FIN","country_FRA","country_GBR",
#"country_GRC", "country_HRV", "country_HUN","country_IRL","country_ITA",
#"country_LTU", "country_LUX", "country_LVA","country_MLT","country_NLD",
#"country_POL", "country_PRT", "country_ROU","country_SVK","country_SVN",
#"country_SWE", "year_1994"  ,"year_1999"  ,"year_2004",
#"year_2009", "year_2014","year_2019"))
#estimates.bma(model_glasso_con) # p_inst enep pint
glasso_constraint <-   lm(EES_GGM_glasso_constraint ~ p_inst + country + year , data = data)
glasso_constraint_2 <- lm(EES_GGM_glasso_constraint ~ p_inst + ENEP + country + year , data = data)
glasso_constraint_3 <- lm(EES_GGM_glasso_constraint ~ p_inst + ENEP + pint + country + year , data = data)
tab_model(list(glasso_constraint, glasso_constraint_2, glasso_constraint_3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on constraint of glasso network",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "ENEP", "pint"))
#model_huge_con <- bms(bms_huge_cons, fixed.reg = c(
#"country_BEL","country_BGR", "country_CYP",  "country_CZE","country_DEU",
#"country_DNK","country_ESP", "country_EST",  "country_FIN","country_FRA","country_GBR",
#"country_GRC", "country_HRV", "country_HUN","country_IRL","country_ITA",
#"country_LTU", "country_LUX", "country_LVA","country_MLT","country_NLD",
#"country_POL", "country_PRT", "country_ROU","country_SVK","country_SVN",
#"country_SWE", "year_1994"  ,"year_1999"  ,"year_2004",
#"year_2009", "year_2014","year_2019"))
#estimates.bma(model_huge_con) # p_inst enep pint
huge_constraint <-   lm(EES_GGM_huge_constraint ~ p_inst + country + year , data = data)
huge_constraint_2 <- lm(EES_GGM_huge_constraint ~ p_inst + ENEP + country + year , data = data)
huge_constraint_3 <- lm(EES_GGM_huge_constraint ~ p_inst + ENEP + pint + country + year , data = data)
tab_model(list(huge_constraint, huge_constraint_2, huge_constraint_3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on constraint of huge network",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "ENEP", "pint"))
#model_cor_aspl <- bms(bms_cor_aspl, fixed.reg = c(
#"country_BEL","country_BGR", "country_CYP",  "country_CZE","country_DEU",
#"country_DNK","country_ESP", "country_EST",  "country_FIN","country_FRA","country_GBR",
#"country_GRC", "country_HRV", "country_HUN","country_IRL","country_ITA",
#"country_LTU", "country_LUX", "country_LVA","country_MLT","country_NLD",
#"country_POL", "country_PRT", "country_ROU","country_SVK","country_SVN",
#"country_SWE", "year_1994"  ,"year_1999"  ,"year_2004",
#"year_2009", "year_2014","year_2019"))
#estimates.bma(model_cor_aspl) # pint pola mass_mob
cor_aspl <-   lm(EES_COR_aspl ~ pint + country + year , data = data)
cor_aspl_2 <- lm(EES_COR_aspl ~ pint + pola + country + year , data = data)
cor_aspl_3 <- lm(EES_COR_aspl ~ pint + pola + mass_mob + country + year , data = data)
tab_model(list(cor_aspl, cor_aspl_2, cor_aspl_3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of correlational network",
string.pred = " ",
auto.label = FALSE,
terms = c("pint", "pola", "mass_mob"))
#model_glasso_aspl <- bms(bms_glasso_aspl, fixed.reg = c(
#"country_BEL","country_BGR", "country_CYP",  "country_CZE","country_DEU",
#"country_DNK","country_ESP", "country_EST",  "country_FIN","country_FRA","country_GBR",
#"country_GRC", "country_HRV", "country_HUN","country_IRL","country_ITA",
#"country_LTU", "country_LUX", "country_LVA","country_MLT","country_NLD",
#"country_POL", "country_PRT", "country_ROU","country_SVK","country_SVN",
#"country_SWE", "year_1994"  ,"year_1999"  ,"year_2004",
#"year_2009", "year_2014","year_2019"))
#estimates.bma(model_glasso_aspl) p_inst pola educ
glasso_aspl <-   lm(EES_GGM_glasso_aspl ~ p_inst + country + year , data = data)
glasso_aspl_2 <- lm(EES_GGM_glasso_aspl ~ p_inst + pola + country + year , data = data)
glasso_aspl_3 <- lm(EES_GGM_glasso_aspl ~ p_inst + pola + educ + country + year , data = data)
tab_model(list(glasso_aspl, glasso_aspl_2, glasso_aspl_3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3", "M4"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of glasso network",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "pola", "educ"))
#model_huge_aspl <- bms(bms_huge_aspl, fixed.reg = c(
#"country_BEL","country_BGR", "country_CYP",  "country_CZE","country_DEU",
#"country_DNK","country_ESP", "country_EST",  "country_FIN","country_FRA","country_GBR",
#"country_GRC", "country_HRV", "country_HUN","country_IRL","country_ITA",
#"country_LTU", "country_LUX", "country_LVA","country_MLT","country_NLD",
#"country_POL", "country_PRT", "country_ROU","country_SVK","country_SVN",
#"country_SWE", "year_1994"  ,"year_1999"  ,"year_2004",
#"year_2009", "year_2014","year_2019"))
#estimates.bma(model_huge_aspl) #p_inst pola alt_inf
huge_aspl <-   lm(EES_GGM_huge_aspl ~ p_inst + country + year , data = data)
huge_aspl_2 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + country + year , data = data)
huge_aspl_3 <- lm(EES_GGM_huge_aspl ~ p_inst + pola + alt_inf + country + year , data = data)
tab_model(list(huge_aspl, huge_aspl_2, huge_aspl_3),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1", "M2", "M3"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) on ASPL of huge network",
string.pred = " ",
auto.label = FALSE,
terms = c("p_inst", "pola", "alt_inf"))
th_1 = lm(EES_COR_constraint ~ pola + p_inst + pint + country + year + ENEP + gallagher + ihdi, data = data)
th_2 = lm(EES_GGM_glasso_constraint ~ pola + p_inst + pint + country + year + ENEP + gallagher + ihdi, data = data)
th_3 = lm(EES_GGM_huge_constraint ~ pola + p_inst + pint + country + year + ENEP + gallagher + ihdi, data = data)
th_4 = lm(EES_COR_aspl ~ pola + p_inst + pint + country + year + ENEP + gallagher + ihdi, data = data)
th_5 = lm(EES_GGM_glasso_aspl ~ pola + p_inst + pint + country + year + ENEP + gallagher + ihdi, data = data)
th_6 = lm(EES_GGM_huge_aspl ~ pola + p_inst + pint + country + year + ENEP + gallagher + ihdi, data = data)
tab_model(list(th_1, th_2, th_3, th_4, th_5, th_6),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("Cor_const", "glasso_const", "huge_const",
"Cor_aspl", "glasso_aspl", "huge_aspl"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) common model for all DV",
string.pred = " ",
auto.label = FALSE,
terms = c("pola", "p_inst", "pint"))
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
# np_w as absoulte value
turnout$EES_COR_np_w = abs(turnout$EES_COR_np_w)
turnout$EES_GGM_glasso_np_w = abs(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_np_w = abs(turnout$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
turnout$EES_GGM_glasso_aspl = rescale01(turnout$EES_GGM_glasso_aspl)
turnout$EES_GGM_glasso_np_i = rescale01(turnout$EES_GGM_glasso_np_i)
turnout$EES_GGM_glasso_np_w = rescale01(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_aspl = rescale01(turnout$EES_GGM_huge_aspl)
turnout$EES_GGM_huge_np_i = rescale01(turnout$EES_GGM_huge_np_i)
turnout$EES_GGM_huge_np_w = rescale01(turnout$EES_GGM_huge_np_w)
turnout$EES_COR_aspl = rescale01(turnout$EES_COR_aspl)
turnout$EES_COR_np_i = rescale01(turnout$EES_COR_np_i)
turnout$EES_COR_np_w = rescale01(turnout$EES_COR_np_w)
turnout$educ = rescale01(turnout$educ)
turnout$ideol = rescale01(turnout$ideol)
turnout$mass_mob = rescale01(turnout$mass_mob)
turnout$p_inst_k = rescale01(turnout$p_inst_k)
turnout$pint = rescale01(turnout$pint)
turnout$pola = rescale01(turnout$pola)
turnout$turnout = rescale01(turnout$turnout)
turnout$ENEP = rescale01(turnout$ENEP)
turnout$gallagher = rescale01(turnout$gallagher)
#robustness: remove outliers from turnout
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_turn <- mean(turnout$turnout, na.rm = TRUE)
sd_turn <- sd(turnout$turnout, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(turnout > (mean_turn - num_sd * sd_turn) & turnout < (mean_turn + num_sd * sd_turn))
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
# np_w as absoulte value
turnout$EES_COR_np_w = abs(turnout$EES_COR_np_w)
turnout$EES_GGM_glasso_np_w = abs(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_np_w = abs(turnout$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
turnout$EES_GGM_glasso_aspl = rescale01(turnout$EES_GGM_glasso_aspl)
turnout$EES_GGM_glasso_np_i = rescale01(turnout$EES_GGM_glasso_np_i)
turnout$EES_GGM_glasso_np_w = rescale01(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_aspl = rescale01(turnout$EES_GGM_huge_aspl)
turnout$EES_GGM_huge_np_i = rescale01(turnout$EES_GGM_huge_np_i)
turnout$EES_GGM_huge_np_w = rescale01(turnout$EES_GGM_huge_np_w)
turnout$EES_COR_aspl = rescale01(turnout$EES_COR_aspl)
turnout$EES_COR_np_i = rescale01(turnout$EES_COR_np_i)
turnout$EES_COR_np_w = rescale01(turnout$EES_COR_np_w)
turnout$educ = rescale01(turnout$educ)
turnout$ideol = rescale01(turnout$ideol)
turnout$mass_mob = rescale01(turnout$mass_mob)
turnout$p_inst_k = rescale01(turnout$p_inst_k)
turnout$pint = rescale01(turnout$pint)
turnout$pola = rescale01(turnout$pola)
turnout$turnout = rescale01(turnout$turnout)
turnout$ENEP = rescale01(turnout$ENEP)
turnout$gallagher = rescale01(turnout$gallagher)
# import final data
turnout = read_rds(here("Input", "final_data", "final_turnout.rds"))
#as factor
turnout$country = as.factor(turnout$country)
turnout$year = as.factor(turnout$year)
turnout$country_year = as.factor(turnout$country_year)
turnout$infla = as.numeric(turnout$infla)
# np_w as absoulte value
turnout$EES_COR_np_w = abs(turnout$EES_COR_np_w)
turnout$EES_GGM_glasso_np_w = abs(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_np_w = abs(turnout$EES_GGM_huge_np_w)
# rescale function
rescale01 <- function(x) {(x - min(x)) / (max(x) - min(x))}
# Manually applying the function
turnout$EES_GGM_glasso_aspl = rescale01(turnout$EES_GGM_glasso_aspl)
turnout$EES_GGM_glasso_np_i = rescale01(turnout$EES_GGM_glasso_np_i)
turnout$EES_GGM_glasso_np_w = rescale01(turnout$EES_GGM_glasso_np_w)
turnout$EES_GGM_huge_aspl = rescale01(turnout$EES_GGM_huge_aspl)
turnout$EES_GGM_huge_np_i = rescale01(turnout$EES_GGM_huge_np_i)
turnout$EES_GGM_huge_np_w = rescale01(turnout$EES_GGM_huge_np_w)
turnout$EES_COR_aspl = rescale01(turnout$EES_COR_aspl)
turnout$EES_COR_np_i = rescale01(turnout$EES_COR_np_i)
turnout$EES_COR_np_w = rescale01(turnout$EES_COR_np_w)
turnout$educ = rescale01(turnout$educ)
turnout$ideol = rescale01(turnout$ideol)
turnout$mass_mob = rescale01(turnout$mass_mob)
turnout$p_inst_k = rescale01(turnout$p_inst_k)
turnout$pint = rescale01(turnout$pint)
turnout$pola = rescale01(turnout$pola)
turnout$turnout = rescale01(turnout$turnout)
turnout$ENEP = rescale01(turnout$ENEP)
turnout$gallagher = rescale01(turnout$gallagher)
#robustness: remove outliers from turnout
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_turn <- mean(turnout$turnout, na.rm = TRUE)
sd_turn <- sd(turnout$turnout, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(turnout > (mean_turn - num_sd * sd_turn) & turnout < (mean_turn + num_sd * sd_turn))
#robustness: remove outliers from np_i
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_i > (mean_np - num_sd * sd_np) & EES_COR_np_i < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_i > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_i < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_i, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_i > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_i < (mean_np + num_sd * sd_np))
#robustness: remove outliers from np_w
# filter outliers
num_sd <- 3
# cor
# Calculate mean and sd
mean_np <- mean(turnout$EES_COR_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_COR_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_COR_np_w > (mean_np - num_sd * sd_np) & EES_COR_np_w < (mean_np + num_sd * sd_np))
# glasso
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_glasso_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_glasso_np_w > (mean_np - num_sd * sd_np) & EES_GGM_glasso_np_w < (mean_np + num_sd * sd_np))
# huge
# Calculate mean and sd
mean_np <- mean(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
sd_np <- sd(turnout$EES_GGM_huge_np_w, na.rm = TRUE)
# Filter out outliers
turnout <- turnout %>%
filter(EES_GGM_huge_np_w > (mean_np - num_sd * sd_np) & EES_GGM_huge_np_w < (mean_np + num_sd * sd_np))
# reg turnout
tur_1 = lm(turnout ~ mand + EES_COR_constraint + country + year, data = turnout)
tur_2 = lm(turnout ~ mand + EES_GGM_glasso_constraint + country + year, data = turnout)
tur_3 = lm(turnout ~ mand + EES_GGM_huge_constraint + country + year, data = turnout)
tur_4 = lm(turnout ~ mand + EES_COR_aspl + country + year, data = turnout)
tur_5 = lm(turnout ~ mand + EES_GGM_glasso_aspl + country + year, data = turnout)
tur_6 = lm(turnout ~ mand + EES_GGM_huge_aspl + country + year, data = turnout)
tab_model(list(tur_1, tur_2, tur_3, tur_4, tur_5, tur_6),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("Cor_const", "glasso_const", "huge_const",
"Cor_aspl", "glasso_aspl", "huge_aspl"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) common model for all DV",
string.pred = " ",
auto.label = FALSE,
terms = c("mand", "EES_COR_constraint", "EES_GGM_glasso_constraint", "EES_GGM_huge_constraint",
"EES_COR_aspl", "EES_GGM_glasso_aspl", "EES_GGM_huge_aspl"))
tur_sign_1_2 = lm(turnout ~ mand + EES_COR_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_2_2 = lm(turnout ~ mand + EES_COR_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_3_2 = lm(turnout ~ mand + EES_GGM_glasso_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_4_2 = lm(turnout ~ mand + EES_GGM_glasso_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_5_2 = lm(turnout ~ mand + EES_GGM_huge_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_6_2 = lm(turnout ~ mand + EES_GGM_huge_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tab_model(list(tur_sign_1_2, tur_sign_2_2, tur_sign_3_2, tur_sign_4_2, tur_sign_5_2, tur_sign_6_2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("Cor_const", "glasso_const", "huge_const",
"Cor_aspl", "glasso_aspl", "huge_aspl"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) common model for all DV",
string.pred = " ",
auto.label = FALSE,
terms = c("mand", "EES_COR_np_i", "EES_COR_np_w", "EES_GGM_glasso_np_i",
"EES_GGM_glasso_np_w", "EES_GGM_huge_np_i", "EES_GGM_huge_np_w"))
tur_sign_1_2 = lm(turnout ~ mand + EES_COR_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_2_2 = lm(turnout ~ mand + EES_COR_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_3_2 = lm(turnout ~ mand + EES_GGM_glasso_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_4_2 = lm(turnout ~ mand + EES_GGM_glasso_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_5_2 = lm(turnout ~ mand + EES_GGM_huge_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_6_2 = lm(turnout ~ mand + EES_GGM_huge_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tab_model(list(tur_sign_1_2, tur_sign_2_2, tur_sign_3_2, tur_sign_4_2, tur_sign_5_2, tur_sign_6_2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("Cor_const", "glasso_const", "huge_const",
"Cor_aspl", "glasso_aspl", "huge_aspl"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) common model for all DV",
string.pred = " ",
auto.label = FALSE,
terms = c("mand", "EES_COR_np_i", "EES_COR_np_w", "EES_GGM_glasso_np_i",
"EES_GGM_glasso_np_w", "EES_GGM_huge_np_i", "EES_GGM_huge_np_w"))
tur_sign_1_2 = lm(turnout ~ mand + EES_COR_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_2_2 = lm(turnout ~ mand + EES_COR_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_3_2 = lm(turnout ~ mand + EES_GGM_glasso_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_4_2 = lm(turnout ~ mand + EES_GGM_glasso_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_5_2 = lm(turnout ~ mand + EES_GGM_huge_np_i + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tur_sign_6_2 = lm(turnout ~ mand + EES_GGM_huge_np_w + gdp + infla + ihdi + pola + ENEP + country + year, data = turnout)
tab_model(list(tur_sign_1_2, tur_sign_2_2, tur_sign_3_2, tur_sign_4_2, tur_sign_5_2, tur_sign_6_2),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("Cor_const", "glasso_const", "huge_const",
"Cor_aspl", "glasso_aspl", "huge_aspl"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) common model for all DV",
string.pred = " ",
auto.label = FALSE,
terms = c("mand", "EES_COR_np_i", "EES_COR_np_w", "EES_GGM_glasso_np_i",
"EES_GGM_glasso_np_w", "EES_GGM_huge_np_i", "EES_GGM_huge_np_w"))
np_i_cor = lm(EES_COR_np_i ~  ideol + mass_mob + p_inst + pola + country + year, data = turnout)
np_i_gla = lm(EES_COR_np_i ~  ideol + mass_mob + p_inst + pola + country + year, data = turnout)
np_i_hug = lm(EES_COR_np_i ~  ideol + mass_mob + p_inst + pola + country + year, data = turnout)
np_w_cor = lm(EES_COR_np_w ~  ideol + mass_mob + p_inst + pola + country + year, data = turnout)
np_w_gla = lm(EES_COR_np_w ~  ideol + mass_mob + p_inst + pola + country + year, data = turnout)
np_w_hug = lm(EES_COR_np_w ~  ideol + mass_mob + p_inst + pola + country + year, data = turnout)
tab_model(list(np_i_cor, np_i_gla, np_i_hug, np_w_cor, np_w_gla, np_w_hug),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("np_i_cor", "np_i_gla", "np_i_hug", "np_w_cor", "np_w_gla", "np_w_hug"),
collapse.ci = TRUE,
show.aic = TRUE,
title = "OLS fixed effects (country and years) common model for all DV",
string.pred = " ",
auto.label = FALSE,
terms = c("ideol", "mass_mob", "p_inst", "pola"))
